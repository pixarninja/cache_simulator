Title: Lab1 Cache Simulator
Author: Harris, Mark
 
Class:		CSE 331
Instructor:	Zheng
Assignment:	Lab Project #1
 
Assigned:	Oct 17, 2016
Assignmed:	Oct 17, 2016
Due:		Oct 31, 2016

Project Description: Implements a cache simulator and calculates the
following quantities:

- Total Hit Rate
- Load Hit Rate
- Store Hit Rate
- Total Run Time
- Average Memory Access Latency

The code is split up into 3 separate files:

1. cachesim.cpp: holds the main() function and runs all of the cache
   simulation logic implemented in methods held in fun.cpp.

2. fun.cpp: holds methods/constructors for each class, and handles
   initialization and logic within each class respectively.

3. fun.h: holds class declarations and includes header files for
   compilation. This file is referenced as a header file in both
   cachesim.cpp and fun.cpp.

Compilation and Execution Instructions:

1. To compile, run the "make" command. The program uses the g++
   compiler with the c++11 build and some debugging flags. I have
   tested compilation on rainbow@nmt.edu and it successfully creates
   the executable file.

2. To run, type the executable name as you would any other
   executable (i.e. ./cachesim) followed by the configuration file
   path and the trace file path. The program will output a *.out
   file containing the requested quantities (5 lines in total) in
   the same order as they were in the PDF.

*PLEASE NOTE*

Segfaults sometimes occur when the code is run. This may be due to
not freeing memory. This affects the completion of the program,
however the output of the cache simulator is written to and closed
before the segfault occurs, so the output of the simulator is still valid. I would have debugged this more but I ran out of time. Please
contact me if you have any questions about it.
